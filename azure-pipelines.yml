trigger: 
   branches:
     include:
       - main

pool: MyAgent1

variables:
     directory: '$(System.DefaultWorkingDirectory)/rootModule/dev-env'
stages:
  - stage: Build
    displayName: Terraform(init/fmt/validate/plan)
    jobs:
    - job: TerraformPlan
      steps:
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'

        - task: TerraformTask@5
          displayName: Terraform init
          inputs:
            provider: 'azurerm'
            command: 'init'
            workingDirectory: $(directory)
            backendServiceArm: 'ServiceConnection'
            backendAzureRmOverrideSubscriptionID: '1ef3481e-bfe1-4160-aeeb-862132dc8f0e'
            backendAzureRmResourceGroupName: 'rg-backend'
            backendAzureRmStorageAccountName: 'strgaccbackend'
            backendAzureRmContainerName: 'strgcontainer'
            backendAzureRmKey: 'terraform.tfstate'

        - task: TerraformTask@5
          displayName: Terraform fmt
          inputs:
            provider: 'azurerm'
            command: 'custom'
            environmentServiceNameAzureRM: 'ServiceConnection'
            workingDirectory: $(directory)
            outputTo: 'console'
            customCommand: 'fmt'

        - task: TerraformTask@5
          displayName: Terraform validate
          inputs:
            provider: 'azurerm'
            command: 'validate'
            environmentServiceNameAzureRM: 'ServiceConnection'
            workingDirectory: $(directory)

        - task: TerraformTask@5
          displayName: Terraform Plan
          inputs:
            provider: 'azurerm'
            command: 'plan'
            environmentServiceNameAzureRM: 'ServiceConnection'
            workingDirectory: $(directory)

  - stage: Apply
    displayName: Terraform Apply
    dependsOn: 
    condition: succeeded()
    jobs: 
      - deployment: TerraformApply
        environment: dev
        strategy:
         runOnce:
            deploy:
              steps:
                - task: TerraformInstaller@1
                  inputs:
                    terraformVersion: 'latest'

                - task: TerraformTask@5
                  displayName: Terraform Apply
                  inputs:
                    provider: 'azurerm'
                    command: 'apply'
                    environmentServiceNameAzureRM: 'ServiceConnection'
                    workingDirectory: $(directory)
                    args: '-auto-approve'

        